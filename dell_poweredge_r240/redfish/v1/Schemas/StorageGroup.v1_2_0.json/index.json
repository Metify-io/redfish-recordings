{
  "$ref": "#/definitions/StorageGroup",
  "$schema": "/redfish/v1/Schemas/redfish-schema-v1.json",
  "copyright": "Copyright 2016-2018 Storage Networking Industry Association (SNIA), USA. All rights reserved. For the full SNIA copyright policy, see http://www.snia.org/about/corporate_info/copyright",
  "definitions": {
    "Actions": {
      "additionalProperties": false,
      "patternProperties": {
        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
          "description": "This property shall specify a valid odata or Redfish property.",
          "type": [
            "array",
            "boolean",
            "integer",
            "number",
            "null",
            "object",
            "string"
          ]
        }
      },
      "properties": {
        "#StorageGroup.ExposeVolumes": {
          "$ref": "#/definitions/ExposeVolumes"
        },
        "#StorageGroup.HideVolumes": {
          "$ref": "#/definitions/HideVolumes"
        },
        "Oem": {
          "$ref": "#/definitions/OemActions"
        }
      },
      "type": "object"
    },
    "AuthenticationMethod": {
      "enum": [
        "None",
        "CHAP",
        "MutualCHAP",
        "DHCHAP"
      ],
      "enumDescriptions": {
        "CHAP": "iSCSI Challenge Handshake Authentication Protocol (CHAP) authentication is used.",
        "DHCHAP": "Diffie-Hellman Challenge Handshake Authentication Protocol (DHCHAP) is an authentication protocol used in Fibre Channel. DHCHAP implies that only properties 'TargetCHAPUser' and 'TargetPassword' need to be present.",
        "MutualCHAP": "iSCSI Mutual Challenge Handshake Authentication Protocol (CHAP) authentication is used.",
        "None": "No authentication is used."
      },
      "type": "string"
    },
    "CHAPInformation": {
      "additionalProperties": false,
      "description": "User name and password for CHAP authentication",
      "longDescription": "User name and password values for target and initiators Endpoints when CHAP authentication is used.",
      "patternProperties": {
        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
          "description": "This property shall specify a valid odata or Redfish property.",
          "type": [
            "array",
            "boolean",
            "integer",
            "number",
            "null",
            "object",
            "string"
          ]
        }
      },
      "properties": {
        "InitiatorCHAPPassword": {
          "description": "The shared secret for CHAP authentication.",
          "longDescription": "The value of this property shall be the shared secret for CHAP authentication.",
          "readonly": false,
          "type": [
            "string",
            "null"
          ]
        },
        "InitiatorCHAPUser": {
          "description": "The username for CHAP authentication.",
          "longDescription": "If present, this property is the initiator CHAP username for authentication. For example, with an iSCSI scenario, use the initiator iQN.",
          "readonly": false,
          "type": [
            "string",
            "null"
          ]
        },
        "TargetCHAPUser": {
          "description": "The CHAP Username for 2-way CHAP authentication.",
          "longDescription": "The value of this property shall be the CHAP Username for 2-way CHAP authentication. For example, with an iSCSI scenario, use the target iQN. In a FC with DHCHAP, this value will be a FC WWN. ",
          "readonly": false,
          "type": [
            "string",
            "null"
          ]
        },
        "TargetPassword": {
          "description": "The CHAP Secret for 2-way CHAP authentication.",
          "longDescription": "The value of this property shall be the CHAP Secret for 2-way CHAP authentication.",
          "readonly": false,
          "type": [
            "string",
            "null"
          ]
        }
      },
      "type": "object"
    },
    "ExposeVolumes": {
      "additionalProperties": false,
      "description": "Expose the storage volumes of this group.",
      "longDescription": "Exposes the storage of this group via the target endpoints named in the ServerEndpointGroups to the initiator endpoints named in the ClientEndpointGroups.  The property VolumesAreExposed shall be set to true when this action is completed.",
      "parameters": {},
      "patternProperties": {
        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
          "description": "This property shall specify a valid odata or Redfish property.",
          "type": [
            "array",
            "boolean",
            "integer",
            "number",
            "null",
            "object",
            "string"
          ]
        }
      },
      "properties": {
        "target": {
          "description": "Link to invoke action",
          "format": "uri",
          "type": "string"
        },
        "title": {
          "description": "Friendly action name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HideVolumes": {
      "additionalProperties": false,
      "description": "Hide the storage volumes of this group.",
      "longDescription": "Hide the storage of this group from the initiator endpoints named in the ClientEndpointGroups. The property VolumesAreExposed shall be set to false when this action is completed.",
      "parameters": {},
      "patternProperties": {
        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
          "description": "This property shall specify a valid odata or Redfish property.",
          "type": [
            "array",
            "boolean",
            "integer",
            "number",
            "null",
            "object",
            "string"
          ]
        }
      },
      "properties": {
        "target": {
          "description": "Link to invoke action",
          "format": "uri",
          "type": "string"
        },
        "title": {
          "description": "Friendly action name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Links": {
      "additionalProperties": false,
      "patternProperties": {
        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
          "description": "This property shall specify a valid odata or Redfish property.",
          "type": [
            "array",
            "boolean",
            "integer",
            "number",
            "null",
            "object",
            "string"
          ]
        }
      },
      "properties": {
        "ChildStorageGroups": {
          "description": "Child StorageGroups.",
          "items": {
            "$ref": "#/definitions/StorageGroup"
          },
          "longDescription": "An array of references to StorageGroups are incorporated into this StorageGroup",
          "readonly": false,
          "type": "array"
        },
        "ChildStorageGroups@odata.count": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/count"
        },
        "ClassOfService": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/ClassOfService.json#/definitions/ClassOfService"
            },
            {
              "type": "null"
            }
          ],
          "description": "The ClassOfService that all storage in this StorageGroup conforms to.",
          "longDescription": "The ClassOfService that all storage in this StorageGroup conforms to.",
          "readonly": false
        },
        "Oem": {
          "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Oem",
          "description": "Oem extension object.",
          "longDescription": "This object represents the Oem property.  All values for resources described by this schema shall comply to the requirements as described in the Redfish specification."
        },
        "ParentStorageGroups": {
          "description": "Parent StorageGroups.",
          "items": {
            "$ref": "#/definitions/StorageGroup"
          },
          "longDescription": "An array of references to StorageGroups that incorporate this StorageGroup",
          "readonly": true,
          "type": "array"
        },
        "ParentStorageGroups@odata.count": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/count"
        }
      },
      "type": "object"
    },
    "OemActions": {
      "additionalProperties": true,
      "patternProperties": {
        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
          "description": "This property shall specify a valid odata or Redfish property.",
          "type": [
            "array",
            "boolean",
            "integer",
            "number",
            "null",
            "object",
            "string"
          ]
        }
      },
      "properties": {},
      "type": "object"
    },
    "StorageGroup": {
      "additionalProperties": false,
      "description": "Collection of resources that are managed and exposed to hosts as a group.",
      "longDescription": "A storage group collects a set of related storage entities (volumes, file systems...) The collection should be useful for managing the storage of a set of related client applications.",
      "patternProperties": {
        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
          "description": "This property shall specify a valid odata or Redfish property.",
          "type": [
            "array",
            "boolean",
            "integer",
            "number",
            "null",
            "object",
            "string"
          ]
        }
      },
      "properties": {
        "@odata.context": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/context"
        },
        "@odata.etag": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/etag"
        },
        "@odata.id": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/id"
        },
        "@odata.type": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/type"
        },
        "AccessState": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/EndpointGroup.json#/definitions/AccessState"
            },
            {
              "type": "null"
            }
          ],
          "description": "AccessState for this storage group.",
          "longDescription": "The value of this property shall describe the access characteristics of this storage group. All associated logical units through all aggregated ports shall share this access state.",
          "readonly": false
        },
        "Actions": {
          "$ref": "#/definitions/Actions",
          "description": "The available actions for this resource.",
          "longDescription": "The Actions property shall contain the available actions for this resource.",
          "readonly": true
        },
        "AuthenticationMethod": {
          "anyOf": [
            {
              "$ref": "#/definitions/AuthenticationMethod"
            },
            {
              "type": "null"
            }
          ],
          "description": "The Authentication method used for the Endpoints involved in this StorageGroup.",
          "longDescription": "The value of this property must be what kind of authentication that the endpoints in this StorageGroup understands.",
          "readonly": false
        },
        "ChapInfo": {
          "description": "The credential information used to authenticate the endpoints in this StorageGroup.",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/CHAPInformation"
              },
              {
                "type": "null"
              }
            ]
          },
          "longDescription": "The value of this property must reflect the authentication used by this specific endpoint. For example, if this endpoint represents an initiator, and AuthenticationMethod is CHAP or MutualCHAP, the Credentials fields CHAPUsername and CHAPSecret must be used. If this endpoint represents a target endpoint and AuthenticationMethod is MutualCHAP, then MutualCHAPUsername and MutualCHAPSecret must be used.",
          "type": "array"
        },
        "ClientEndpointGroups": {
          "description": "Groups of client endpoints in this storage group.",
          "items": {
            "$ref": "/redfish/v1/Schemas/EndpointGroup.json#/definitions/EndpointGroup"
          },
          "longDescription": "An array of references to groups of client-side endpoints that may be used to make requests to the storage exposed by this StorageGroup. If null, the implementation may allow access to the storage via any client-side endpoint.  If empty, the implementation shall not allow access to the storage via any client-side endpoint.",
          "readonly": false,
          "type": "array"
        },
        "ClientEndpointGroups@odata.count": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/count"
        },
        "Description": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Description"
            },
            {
              "type": "null"
            }
          ],
          "readonly": true
        },
        "Id": {
          "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Id",
          "readonly": true
        },
        "Identifier": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Identifier"
            },
            {
              "type": "null"
            }
          ],
          "description": "The value identifies this resource.",
          "longDescription": "The value shall be unique within the managed ecosystem.",
          "readonly": true
        },
        "Links": {
          "$ref": "#/definitions/Links",
          "description": "Contains links to other resources that are related to this resource.",
          "longDescription": "This structure shall contain references to resources that are not contained within this resource.",
          "readonly": true
        },
        "MappedVolumes": {
          "description": "Mapped Volumes in this storage group.",
          "items": {
            "anyOf": [
              {
                "$ref": "/redfish/v1/Schemas/StorageGroup.json#/definitions/MappedVolume"
              },
              {
                "type": "null"
              }
            ]
          },
          "longDescription": "An array of mapped volumes managed by this storage group.",
          "readonly": false,
          "type": "array"
        },
        "MembersAreConsistent": {
          "description": "Members are kept in a consistent state.",
          "longDescription": "The value of this property shall be set to true if all members are in a consistent state. The default value for this property is false.",
          "readonly": false,
          "type": [
            "boolean",
            "null"
          ]
        },
        "Name": {
          "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Name",
          "readonly": true
        },
        "Oem": {
          "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Oem",
          "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.",
          "longDescription": "The value of this string shall be of the format for the reserved word *Oem*."
        },
        "ReplicaInfo": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/StorageReplicaInfo.json#/definitions/ReplicaInfo"
            },
            {
              "type": "null"
            }
          ],
          "description": "Describes this storage group in its role as a target for replication.",
          "longDescription": "This property shall describe the replication relationship between this storage group and a corresponding source storage group.",
          "readonly": false
        },
        "ReplicaTargets": {
          "description": "The resources that are target replicas of this source.",
          "items": {
            "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/idRef"
          },
          "longDescription": "The value shall reference the target replicas that are sourced by this replica.",
          "readonly": true,
          "type": "array"
        },
        "ReplicaTargets@odata.count": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/count"
        },
        "ServerEndpointGroups": {
          "description": "Groups of server endpoints in this storage group.",
          "items": {
            "$ref": "/redfish/v1/Schemas/EndpointGroup.json#/definitions/EndpointGroup"
          },
          "longDescription": "An array of references to groups of server-side endpoints that may be used to make requests to the storage exposed by this storage group.  If null, the implementation may allow access to the storage via any server-side endpoint.  If empty, the implementation shall not allow access to the storage via any server-side endpoint.",
          "readonly": false,
          "type": "array"
        },
        "ServerEndpointGroups@odata.count": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/count"
        },
        "Status": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Status"
            },
            {
              "type": "null"
            }
          ]
        },
        "Volumes": {
          "deprecated": "These references are replaced by the MappedVolumes array in StorageGroup.",
          "description": "Volumes in this storage group.",
          "items": {
            "$ref": "/redfish/v1/Schemas/Volume.json#/definitions/Volume"
          },
          "longDescription": "An array of references to volumes managed by this storage group.",
          "readonly": false,
          "type": "array"
        },
        "Volumes@odata.count": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/count"
        },
        "VolumesAreExposed": {
          "description": "Storage volumes are exposed to paths defined by the client and server endpoints.",
          "longDescription": "The value of this property shall be set to true if storage volumes are exposed to the paths defined by the client and server endpoints.  The default value for this property is false.",
          "readonly": false,
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "required": [
        "@odata.id",
        "@odata.type",
        "Id",
        "Name"
      ],
      "type": "object"
    }
  },
  "owningEntity": "SNIA",
  "title": "#StorageGroup.v1_2_0.StorageGroup",
  "@odata.id": "/redfish/v1/Schemas/StorageGroup.v1_2_0.json"
}
