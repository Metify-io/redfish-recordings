{"$ref":"#/definitions/DelliDRACCardService","$schema":"/redfish/v1/Schemas/redfish-schema-v1.json","copyright":"Copyright 2014-2019 Dell, Inc. or its subsidiaries. All Rights Reserved.","definitions":{"Actions":{"additionalProperties":false,"description":"The available actions for this resource.","longDescription":"This type shall contain the available actions for this resource.","patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"#DelliDRACCardService.DeleteCertificate":{"$ref":"#/definitions/DeleteCertificate"},"#DelliDRACCardService.DeleteGroup":{"$ref":"#/definitions/DeleteGroup"},"#DelliDRACCardService.ExportCertificate":{"$ref":"#/definitions/ExportCertificate"},"#DelliDRACCardService.ExportSSLCertificate":{"$ref":"#/definitions/ExportSSLCertificate"},"#DelliDRACCardService.GenerateSEKMCSR":{"$ref":"#/definitions/GenerateSEKMCSR"},"#DelliDRACCardService.ImportCertificate":{"$ref":"#/definitions/ImportCertificate"},"#DelliDRACCardService.ImportSSLCertificate":{"$ref":"#/definitions/ImportSSLCertificate"},"#DelliDRACCardService.JoinGroup":{"$ref":"#/definitions/JoinGroup"},"#DelliDRACCardService.RemoveSelf":{"$ref":"#/definitions/RemoveSelf"},"#DelliDRACCardService.SSLResetCfg":{"$ref":"#/definitions/SSLResetCfg"},"#DelliDRACCardService.SendTestEmailAlert":{"$ref":"#/definitions/SendTestEmailAlert"},"#DelliDRACCardService.SendTestSNMPTrap":{"$ref":"#/definitions/SendTestSNMPTrap"},"#DelliDRACCardService.TestRsyslogServerConnection":{"$ref":"#/definitions/TestRsyslogServerConnection"},"#DelliDRACCardService.iDRACReset":{"$ref":"#/definitions/iDRACReset"},"#DelliDRACCardService.iDRACResetCfg":{"$ref":"#/definitions/iDRACResetCfg"}},"type":"object"},"CertificateType":{"enum":["CA","CSC","ClientTrustCertificate","KMS_SERVER_CA","RSYSLOG_SERVER_CA","SEKM_SSL_CERT","Server"],"enumDescriptions":{"CA":"CA","CSC":"CSC","ClientTrustCertificate":"Client Trust Certificate","KMS_SERVER_CA":"KMS_SERVER_CA","RSYSLOG_SERVER_CA":"RSYSLOG_SERVER_CA","SEKM_SSL_CERT":"SEKM_SSL_CERT","Server":"Server"},"type":"string"},"CloneConfiguration":{"enum":["Disable","Enable"],"enumDescriptions":{"Disable":"Disable","Enable":"Enable"},"type":"string"},"DeleteCertificate":{"additionalProperties":false,"description":"This method is used to delete the certificate from iDRAC, on the basis of input parameter Type.","longDescription":"This method is used to delete the certificate from iDRAC, on the basis of input parameter Type.","parameters":{"CertificateType":{"$ref":"#/definitions/CertificateType","description":"The type of the certificate to be deleted.","longDescription":"The type of the certificate to be deleted."}},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"DeleteGroup":{"additionalProperties":false,"description":"The method is used delete the group.","longDescription":"The method is used delete the group.","parameters":{"GroupName":{"description":"Name of group to be delete.","longDescription":"Name of group to be delete.","type":"string"}},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"DelliDRACCardService":{"additionalProperties":false,"description":"The DelliDRACCardService resource provides some actions to support iDRAC configurations.","longDescription":"The DelliDRACCardService resource provides some actions to support iDRAC configurations.","patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"@odata.context":{"$ref":"/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/context"},"@odata.etag":{"$ref":"/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/etag"},"@odata.id":{"$ref":"/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/id"},"@odata.type":{"$ref":"/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/type"},"Actions":{"$ref":"#/definitions/Actions","description":"The available actions for this resource.","longDescription":"The Actions property shall contain the available actions for this resource."},"Description":{"anyOf":[{"$ref":"/redfish/v1/Schemas/Resource.json#/definitions/Description"},{"type":"null"}],"readonly":true},"Id":{"$ref":"/redfish/v1/Schemas/Resource.json#/definitions/Id","readonly":true},"Name":{"$ref":"/redfish/v1/Schemas/Resource.json#/definitions/Name","readonly":true},"Oem":{"$ref":"/redfish/v1/Schemas/Resource.json#/definitions/Oem","description":"This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.","longDescription":"The value of this string shall be of the format for the reserved word *Oem*."}},"required":["@odata.id","@odata.type","Id","Name"],"type":"object"},"ExportCertificate":{"additionalProperties":false,"description":"This method is used to export the certificate from the idrac, based on input parameter CertificateType. ExportCertificate returns the certificate file path.","longDescription":"This method is used to export the certificate from the idrac, based on input parameter CertificateType. ExportCertificate returns the certificate file path.","parameters":{"CertificateType":{"$ref":"#/definitions/CertificateType","description":"The type of the certificate to be exported.","longDescription":"The type of the certificate to be exported."}},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"ExportSSLCertificate":{"additionalProperties":false,"description":"This method is used to export the ssl certificate from the idrac, based on input parameter Type. ExportSSLCertificate returns the certificate.","longDescription":"This method is used to export the ssl certificate from the idrac, based on input parameter Type. ExportSSLCertificate returns the certificate.","parameters":{"SSLCertType":{"$ref":"#/definitions/SSLCertType","description":"The type of the certificate to be exported.","longDescription":"The type of the certificate to be exported."}},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"Force":{"enum":["Force","Graceful"],"enumDescriptions":{"Force":"Force","Graceful":"Graceful"},"type":"string"},"GenerateSEKMCSR":{"additionalProperties":false,"description":"This method is used to create the SEKM certificate signing request(CSR) and return the certificate file. The certificate file should be signed by an authority. Note: For creating the CSR, the following DelliDRACCardString attributes under SEKMCert group must be configured. 1.CommonName, 2.OrganizationUnit, 3.LocalityName, 4.StateName, 5. CountryCode, 6. EmailAddress, 7.OrganizationName and optional attributes are 1.SubjectAltName 2.UserId.","longDescription":"This method is used to create the SEKM certificate signing request(CSR) and return the certificate file. The certificate file should be signed by an authority. Note: For creating the CSR, the following DelliDRACCardString attributes under SEKMCert group must be configured. 1.CommonName, 2.OrganizationUnit, 3.LocalityName, 4.StateName, 5. CountryCode, 6. EmailAddress, 7.OrganizationName and optional attributes are 1.SubjectAltName 2.UserId.","parameters":{},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"ImportCertificate":{"additionalProperties":false,"description":"This method is used to import the certificate to iDRAC, on the basis of input parameter CertificateType.","longDescription":"This method is used to import the certificate to iDRAC, on the basis of input parameter CertificateType.","parameters":{"CertificateFile":{"description":"A base 64 encoded string of the Certificate file.","longDescription":"A base 64 encoded string of the Certificate file.","type":"string"},"CertificateType":{"$ref":"#/definitions/CertificateType","description":"Type of the certificate to be imported.","longDescription":"Type of the certificate to be imported."},"Instance":{"description":"This parameter represent the instance number. Applicable only for CertificateType RSYSLOG_SERVER_CA and max 2 instance are allowed to store.","longDescription":"This parameter represent the instance number. Applicable only for CertificateType RSYSLOG_SERVER_CA and max 2 instance are allowed to store.","type":"integer"},"Passphrase":{"description":"A passphrase for certificate file.","longDescription":"A passphrase for certificate file.","type":"string"}},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"ImportSSLCertificate":{"additionalProperties":false,"description":"This method is used to import the ssl certificate to iDRAC, on the basis of input parameter Type. After importing the certificate, the iDRAC will automatically restart.","longDescription":"This method is used to import the ssl certificate to iDRAC, on the basis of input parameter Type. After importing the certificate, the iDRAC will automatically restart.","parameters":{"CertificateType":{"$ref":"#/definitions/CertificateType","description":"Type of the certificate to be imported.","longDescription":"Type of the certificate to be imported."},"Passphrase":{"description":"A passphrase for certificate file. Note: This is optional parameter for CSC certificate, and not required for Server and CA certificates.","longDescription":"A passphrase for certificate file. Note: This is optional parameter for CSC certificate, and not required for Server and CA certificates.","type":"string"},"SSLCertificateFile":{"description":"A base 64 encoded string of the XML Certificate file. Note: For importing CSC certificate, user has to convert PKCS file to base64 format. Use the openssl command. The CTC file content has to be in PEM format (base 64 encoded).","longDescription":"A base 64 encoded string of the XML Certificate file. Note: For importing CSC certificate, user has to convert PKCS file to base64 format. Use the openssl command. The CTC file content has to be in PEM format (base 64 encoded).","type":"string"}},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"JoinGroup":{"additionalProperties":false,"description":"The method is used join an existing group providing the GroupPasscode.","longDescription":"The method is used join an existing group providing the GroupPasscode.","parameters":{"CloneConfiguration":{"$ref":"#/definitions/CloneConfiguration","description":"Clones email alert configuration from the group once joined.0-Disable, 1-Enable.","longDescription":"Clones email alert configuration from the group once joined.0-Disable, 1-Enable."},"GroupName":{"description":"Name of the group to be joined.","longDescription":"Name of the group to be joined.","type":"string"},"GroupPasscode":{"description":"Passcode of the group to be joined.","longDescription":"Passcode of the group to be joined.","type":"string"},"GroupUUID":{"description":"Unique Identifier of the group to be joined.","longDescription":"Unique Identifier of the group to be joined.","type":"string"}},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"Preserve":{"enum":["All","Default","ResetAllWithRootDefaults"],"enumDescriptions":{"All":"All","Default":"Default","ResetAllWithRootDefaults":"ResetAllWithRootDefaults"},"type":"string"},"RemoveSelf":{"additionalProperties":false,"description":"The method is used to remove the iDRAC from a group, that the iDRAC is a member of.","longDescription":"The method is used to remove the iDRAC from a group, that the iDRAC is a member of.","parameters":{"GroupName":{"description":"Name of the group which the iDRAC is a part of.","longDescription":"Name of the group which the iDRAC is a part of.","type":"string"}},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"SSLCertType":{"enum":["CA","CSC","ClientTrustCertificate","Server"],"enumDescriptions":{"CA":"CA","CSC":"CSC","ClientTrustCertificate":"Client Trust Certificate","Server":"Server"},"type":"string"},"SSLResetCfg":{"additionalProperties":false,"description":"This method is used to restores the web-server certificate to factory defaults.","longDescription":"This method is used to restores the web-server certificate to factory defaults.","parameters":{},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"SendTestEmailAlert":{"additionalProperties":false,"description":"This method is used to to send a test email alert for a particular attribute.","longDescription":"This method is used to to send a test email alert for a particular attribute.","parameters":{"InstanceID":{"description":"The property shall have the value of the InstanceID property of the attribute for which the test email alert is generated.","longDescription":"The property shall have the value of the InstanceID property of the attribute for which the test email alert is generated.","type":"string"}},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"SendTestSNMPTrap":{"additionalProperties":false,"description":"This method is used to to send a test snmp alert for a particular attribute.","longDescription":"This method is used to to send a test snmp alert for a particular attribute.","parameters":{"InstanceID":{"description":"The property shall have the value of the InstanceID property of the attribute for which the test email alert is generated.","longDescription":"The property shall have the value of the InstanceID property of the attribute for which the test email alert is generated.","type":"string"}},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"TestRsyslogServerConnection":{"additionalProperties":false,"description":"The TestRsyslogServerConnection() method is used to test rsylog connection from iDRAC, i.e Whether Test message from iDRAC is reaching to the the Rsyslog Listener or not .","longDescription":"The TestRsyslogServerConnection() method is used to test rsylog connection from iDRAC, i.e Whether Test message from iDRAC is reaching to the the Rsyslog Listener or not .","parameters":{},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"iDRACReset":{"additionalProperties":false,"description":"This method is used to reset iDRAC .","longDescription":"This method is used to reset iDRAC .","parameters":{"Force":{"$ref":"#/definitions/Force","description":"This option is used to reset the iDRAC by force or gracefully.","longDescription":"This option is used to reset the iDRAC by force or gracefully."}},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"},"iDRACResetCfg":{"additionalProperties":false,"description":"This method is used to reset the iDRAC to factory default configurations.","longDescription":"This method is used to reset the iDRAC to factory default configurations.","parameters":{"Force":{"$ref":"#/definitions/Force","description":"This option is used to reset the iDRAC to factory defaults by force or gracefully.","longDescription":"This option is used to reset the iDRAC to factory defaults by force or gracefully."},"Preserve":{"$ref":"#/definitions/Preserve","description":"Preserve= 0 (Default)-reset all configuration to default except network and users. Preserve=1 (All)-reset all configuration to default including network and users. Preserve=2 (ResetAllWithRootDefaults)  - reset all configuration to default including network preserve default user as root calvin.","longDescription":"Preserve= 0 (Default)-reset all configuration to default except network and users. Preserve=1 (All)-reset all configuration to default including network and users. Preserve=2 (ResetAllWithRootDefaults)  - reset all configuration to default including network preserve default user as root calvin."}},"patternProperties":{"^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$":{"description":"This property shall specify a valid odata or Redfish property.","type":["array","boolean","integer","number","null","object","string"]}},"properties":{"target":{"description":"Link to invoke action","format":"uri","type":"string"},"title":{"description":"Friendly action name","type":"string"}},"type":"object"}},"owningEntity":"Dell","title":"#DelliDRACCardService.v1_1_0.DelliDRACCardService","@odata.id":"/redfish/v1/Schemas/DelliDRACCardService.v1_1_0.json"}