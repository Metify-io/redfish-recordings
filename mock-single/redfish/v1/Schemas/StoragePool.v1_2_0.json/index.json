{
  "$ref": "#/definitions/StoragePool",
  "$schema": "/redfish/v1/Schemas/redfish-schema-v1.json",
  "copyright": "Copyright 2016-2018 Storage Networking Industry Association (SNIA), USA. All rights reserved. For the full SNIA copyright policy, see http://www.snia.org/about/corporate_info/copyright",
  "definitions": {
    "Links": {
      "additionalProperties": false,
      "description": "This version was created to add DedicatedSpareDrives and SpareResourceSets.",
      "patternProperties": {
        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
          "description": "This property shall specify a valid odata or Redfish property.",
          "type": [
            "array",
            "boolean",
            "integer",
            "number",
            "null",
            "object",
            "string"
          ]
        }
      },
      "properties": {
        "DedicatedSpareDrives": {
          "description": "An array of references to the drives which are dedicated spares for this StoragePool.",
          "items": {
            "$ref": "/redfish/v1/Schemas/Drive.json#/definitions/Drive"
          },
          "longDescription": "The value of this property shall be a reference to the resources that this StoragePool is associated with and shall reference resources of type Drive. This property shall only contain references to Drive entities which are currently assigned as a dedicated spare and are able to support this StoragePool.",
          "readonly": true,
          "type": "array"
        },
        "DedicatedSpareDrives@odata.count": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/count"
        },
        "DefaultClassOfService": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/ClassOfService.json#/definitions/ClassOfService"
            },
            {
              "type": "null"
            }
          ],
          "deprecated": "Default ClassOfService moved from Links to NavigationProperty.",
          "description": "The default class of service for entities allocated from this storage pool.",
          "longDescription": "If present, this property shall reference the default class of service for entities allocated from this storage pool.  If the ClassesOfService collection is not empty, then the value of this property shall be one of its entries. If not present, the default class of service of the containing StorageService entity shall be used.",
          "readonly": false
        },
        "Oem": {
          "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Oem",
          "description": "Oem extension object.",
          "longDescription": "This object represents the Oem property.  All values for resources described by this schema shall comply to the requirements as described in the Redfish specification."
        },
        "SpareResourceSets": {
          "description": "An array of references to SpareResourceSets.",
          "items": {
            "$ref": "/redfish/v1/Schemas/SpareResourceSet.json#/definitions/SpareResourceSet"
          },
          "longDescription": "Each referenced SpareResourceSet shall contain resources that may be utilized to replace the capacity provided by a failed resource having a compatible type.",
          "readonly": false,
          "type": "array"
        },
        "SpareResourceSets@odata.count": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/count"
        }
      },
      "type": "object"
    },
    "StoragePool": {
      "additionalProperties": false,
      "description": "A container of data storage.",
      "longDescription": "A container of data storage capable of providing capacity conforming to one of its supported classes of service. The storage pool does not support IO to its data storage.",
      "patternProperties": {
        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
          "description": "This property shall specify a valid odata or Redfish property.",
          "type": [
            "array",
            "boolean",
            "integer",
            "number",
            "null",
            "object",
            "string"
          ]
        }
      },
      "properties": {
        "@odata.context": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/context"
        },
        "@odata.etag": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/etag"
        },
        "@odata.id": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/id"
        },
        "@odata.type": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/type"
        },
        "AllocatedPools": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/StoragePoolCollection.json#/definitions/StoragePoolCollection"
            },
            {
              "type": "null"
            }
          ],
          "description": "A reference to the collection of storage pools allocated from this storage pool.",
          "longDescription": "The value of this property shall contain a reference to the collection of storage pools allocated from this storage pool.",
          "readonly": true
        },
        "AllocatedVolumes": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/VolumeCollection.json#/definitions/VolumeCollection"
            },
            {
              "type": "null"
            }
          ],
          "description": "A reference to the collection of volumes allocated from this storage pool.",
          "longDescription": "The value of this property shall contain a reference to the collection of volumes allocated from this storage pool.",
          "readonly": true
        },
        "BlockSizeBytes": {
          "deprecated": "This property has been Deprecated in favor of StoragePool.v1_1_1.StoragePool.MaxBlockSizeBytes",
          "description": "Maximum Block size in bytes.",
          "longDescription": "Maximum size in bytes of the blocks which form this Volume. If the block size is variable, then the maximum block size in bytes should be specified. If the block size is unknown or if a block concept is not valid (for example, with Memory), enter a 1.",
          "minimum": 0,
          "readonly": true,
          "type": [
            "integer",
            "null"
          ],
          "units": "By"
        },
        "Capacity": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/Capacity.json#/definitions/Capacity"
            },
            {
              "type": "null"
            }
          ],
          "description": "Capacity utilization.",
          "longDescription": "The value of this property shall provide an information about the actual utilization of the capacity within this storage pool.",
          "readonly": true
        },
        "CapacitySources": {
          "description": "An array of space allocations to this store.",
          "items": {
            "$ref": "/redfish/v1/Schemas/Capacity.json#/definitions/CapacitySource"
          },
          "longDescription": "Fully or partially consumed storage from a source resource. Each entry shall provide capacity allocation data from a named source resource.",
          "readonly": true,
          "type": "array"
        },
        "CapacitySources@odata.count": {
          "$ref": "/redfish/v1/Schemas/odata.v4_0_3.json#/definitions/count"
        },
        "ClassesOfService": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/ClassOfServiceCollection.json#/definitions/ClassOfServiceCollection"
            },
            {
              "type": "null"
            }
          ],
          "description": "The ClassesOfService supported by this storage pool.",
          "longDescription": "This property shall contain references to all classes of service supported by this storage pool. Capacity allocated from this storage pool shall conform to one of the referenced classes of service.",
          "readonly": false
        },
        "DefaultClassOfService": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/ClassOfService.json#/definitions/ClassOfService"
            },
            {
              "type": "null"
            }
          ],
          "description": "The default class of service for entities allocated from this storage pool.",
          "longDescription": "If present, this property shall reference the default class of service for entities allocated from this storage pool.  If the ClassesOfService collection is not empty, then the value of this property shall be one of its entries. If not present, the default class of service of the containing StorageService entity shall be used.",
          "readonly": false
        },
        "Description": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Description"
            },
            {
              "type": "null"
            }
          ],
          "readonly": true
        },
        "IOStatistics": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/IOStatistics.json#/definitions/IOStatistics"
            },
            {
              "type": "null"
            }
          ],
          "description": "Statistics for this StoragePool.",
          "longDescription": "The value shall represent IO statistics for this StoragePool."
        },
        "Id": {
          "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Id",
          "readonly": true
        },
        "Identifier": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Identifier"
            },
            {
              "type": "null"
            }
          ],
          "description": "The value identifies this resource.",
          "longDescription": "The value identifies this resource. The value shall be unique within the managed ecosystem.",
          "readonly": false
        },
        "Links": {
          "$ref": "#/definitions/Links",
          "description": "Contains links to other resources that are related to this resource.",
          "longDescription": "This structure shall contain references to resources that are not contained within this resource.",
          "readonly": true
        },
        "LowSpaceWarningThresholdPercents": {
          "description": "Low space warning threshold specified in percents.",
          "items": {
            "type": [
              "integer",
              "null"
            ]
          },
          "longDescription": "Each time the following value is less than one of the values in the array the LOW_SPACE_THRESHOLD_WARNING event shall be triggered: Across all CapacitySources entries, percent = (SUM(AllocatedBytes) - SUM(ConsumedBytes))/SUM(AllocatedBytes).",
          "maximum": 100,
          "minimum": 0,
          "readonly": false,
          "type": "array",
          "units": "%"
        },
        "MaxBlockSizeBytes": {
          "description": "Maximum Block size in bytes.",
          "longDescription": "If present, the value is the maximum block size of an allocated resource. If the block size is unknown or if a block concept is not valid (for example, with Memory), this property shall be NULL.",
          "minimum": 0,
          "readonly": true,
          "type": [
            "integer",
            "null"
          ],
          "units": "By"
        },
        "Name": {
          "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Name",
          "readonly": true
        },
        "Oem": {
          "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Oem",
          "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.",
          "longDescription": "The value of this string shall be of the format for the reserved word *Oem*."
        },
        "RecoverableCapacitySourceCount": {
          "description": "Current number of capacity source resources that are available as replacements.",
          "longDescription": "The value is the number of available capacity source resources currently available in the event that an equivalent capacity source resource fails.",
          "readonly": false,
          "type": [
            "integer",
            "null"
          ]
        },
        "RemainingCapacityPercent": {
          "description": "The percentage of the capacity remaining in the StoragePool.",
          "longDescription": "If present, this value shall return  {[(SUM(AllocatedBytes) - SUM(ConsumedBytes)]/SUM(AllocatedBytes)}*100 represented as an integer value.",
          "readonly": true,
          "type": [
            "integer",
            "null"
          ]
        },
        "Status": {
          "anyOf": [
            {
              "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Status"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "required": [
        "@odata.id",
        "@odata.type",
        "Id",
        "Name"
      ],
      "type": "object"
    }
  },
  "owningEntity": "SNIA",
  "title": "#StoragePool.v1_2_0.StoragePool",
  "@odata.id": "/redfish/v1/Schemas/StoragePool.v1_2_0.json"
}
